import matplotlib.pyplot as plt
from cliff import *
from mpltools import style

style.use('ggplot')

def test(policy, start, max_steps=100, verbose = False):
	""" Cliff evaluation function. """
	pos, ret = np.array(start), 1
	l = [pos]
	for i in range(max_steps):
		action = policy.propagate(list(pos))
		
		pos = update(pos, np.array(action))
		ret -= 1
		if verbose:
			l.append(list(pos))
		if checkGoal(pos):
			ret += 100
			break
		if not checkBounds(pos):
			ret -= 1000
			break;
	if verbose:
		draw(l)
	return ret

pool = Pool.spawn(Genome.open('best.net'), 5, std=0.1)
eonn.evaluate(pool,cliff,100)
champion = max(pool)
startStates = [[0.1,0.1],[0.1,0.9],[0.9,0.9],[0.6,0.4],[0.4,0.4],[0.6,0.6],[0.4,0.6]]
for s in startStates:
	print test(champion.policy,s,verbose = True)
plt.scatter(XGOAL,YGOAL,s = 1500)
plt.show()